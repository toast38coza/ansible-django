---
- hosts: djangoservers
  vars: 
    server_name: polls.tangentdirect.info
    http_port: 8001
    project_name: mysite
    project_repo_name: django-polls-tutorial
    project_repo: git@github.com:toast38coza/django-polls-tutorial.git    
  remote_user: root
  tasks:
    - name: update apt cache 
      apt: update_cache=yes cache_valid_time=3600      
      
    - name: "Install the basics"
      action: apt pkg={{item}} state=installed
      with_items:
        - build-essential
        - python-software-properties
        - python
        - curl
        - python-lxml
        - libxml2-dev
        - libxslt1-dev
        - libjpeg-dev
        - libfreetype6
        - libfreetype6-dev
        - zlib1g-dev
        - sqlite3
        - git
        - python-psycopg2
        - postgresql
        - postgresql-server-dev-all
        - python-dev
        - python-setuptools
        

    - name: Install required Python packages (easy_install).
      easy_install: name={{item}}
      with_items:
        - pip
        - virtualenv

    - name: Install Nginx
      apt: pkg=nginx state=present

    - name: Start Nginx every bootup
      service: name=nginx state=started enabled=yes

    - name: Install nginx server_block.
      template: src=templates/server_block dest=/etc/nginx/sites-enabled/{{project_name}}
      notify: restart nginx

    - name: Install Supervisor
      apt: pkg=supervisor state=present

    - name: Start Supervisor every bootup
      service: name=supervisor state=started enabled=yes

    - name: Add supervisor program.
      template: src=templates/supervisor.conf dest=/etc/supervisor/conf.d/{{project_name}}.conf     

    - name: "Create required directories (www, venvs and log files)"
      file: path={{item}} state=directory
      with_items:
        - /var/www/
        - /srv/venvs/
        - /var/log/nginx/{{project_name}}
        - /var/log/gunicorn/
        - /var/log/supervisor/

    - name: Upload SSH key.
      copy: src=~/.ssh/id_rsa dest=~/.ssh/id_rsa mode=0600

    - name: "Checkout app"
      git: repo={{project_repo}} dest=/var/www/{{project_repo_name}} version=master

    - name: Install requirements into virtualenv.
      pip: requirements=/var/www/{{project_repo_name}}/{{project_name}}/requirements.txt virtualenv=/srv/venvs/{{project_name}}

    - name: Add gunicorn to virtualenv.
      pip: name={{item}} virtualenv=/srv/venvs/{{project_name}}
      with_items:
        - gunicorn

    - name: Run Tests
      django_manage: command=test app_path=/var/www/{{project_repo_name}}/{{project_name}} virtualenv=/srv/venvs/{{project_name}}

    - name: Syncdb
      django_manage: command=syncdb app_path=/var/www/{{project_repo_name}}/{{project_name}} virtualenv=/srv/venvs/{{project_name}}

    - name: "Restarting {{project_name}}"
      notify: restart project

  handlers:
    - name: restart nginx
      service: name=nginx state=restarted
      sudo_user: root
    - name: restart project
      supervisorctl: name={{project_name}} state=restarted
      sudo_user: root


    